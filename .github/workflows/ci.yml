name: CI

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/*.yml'
      - '**/*.py'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/*.yml'
      - '**/*.py'
      - 'requirements.txt'

permissions:
  actions: read
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  unit-test:
    name: Run unit test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install System Dependencies
      run: |
        sudo apt update
        sudo apt install -y --no-install-recommends \
          fonts-freefont-ttf libc6 libfreetype6 libjpeg8 \
          libpng16-16 libportmidi0 libsdl2-2.0-0 \
          libsdl2-image-2.0-0 libsdl2-mixer-2.0-0 libsdl2-ttf-2.0-0
    - name: Install PIP dependencies
      run: python3 -m pip install -r requirements.txt
    - name: Run PyTest
      run: pytest --junit-xml=pytest.xml $(find test -name '*.py')
      env:
        PYTHONPATH: ${{ github.workspace }}
    - name: Publish Test Results
      if: ${{ always() }}
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        junit_files: "**/*.xml"

  style-check:
    name: Run style check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install System Dependencies
      run: |
        sudo apt update
        sudo apt install -y --no-install-recommends \
          fonts-freefont-ttf libc6 libfreetype6 libjpeg8 \
          libpng16-16 libportmidi0 libsdl2-2.0-0 \
          libsdl2-image-2.0-0 libsdl2-mixer-2.0-0 libsdl2-ttf-2.0-0
    - name: Install PIP dependencies
      run: python3 -m pip install -r requirements.txt
    - name: Run Black Formatter
      id: blackcheck
      uses: psf/black@stable
      with:
        version: "~= 23.0"
    - name: Apply Black style
      if: ${{ github.event_name == 'pull_request' && failure() && steps.blackcheck.conclusion == 'failure' }}
      uses: psf/black@stable
      with:
        options: ""
        jupyter: true
    - name: Commit style-changed code
      if: ${{ github.event_name == 'pull_request'&& failure() && steps.blackcheck.conclusion == 'failure' }}
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add *
        git commit -m "Format using Black"
    - name: Push changes
      if: ${{ github.event_name == 'pull_request' && failure() && steps.blackcheck.conclusion == 'failure' }}
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}
